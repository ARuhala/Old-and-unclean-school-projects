# The CI configuration file (provided by the course), TIE-20100/TIE-20106
#
# DO ****NOT**** EDIT THIS FILE!
image: gcc:latest

stages: 
  - build
  - testFunctionality
  - valgrind
  - testPerformance
# General template for all jobs, currently just defines the tag
# for the GitLab CI runner.

# ----------BEGIN TEMPLATES ------------
.general_template: &general_definition
  tags: 
    - tiraka

# Template for the build jobs.
# The excercise name defines the name of the folder and binary
# that represent the assignment
# Artifacts are stored for two days
.build_template: &build_definition  
  <<: *general_definition
  stage: build
  script: 
    - cd $EXCERCISE_NAME 
    - g++ -std=gnu++1y -Wall -W *.cc -o $EXCERCISE_NAME
  artifacts:
    paths:
      - $EXCERCISE_NAME/$EXCERCISE_NAME
    expire_in: 2d

.build_debug_template: &build_debug_definition
  <<: *general_definition
  stage: build
  script: 
    - cd $EXCERCISE_NAME 
    - g++ -std=gnu++1y -Wall -W *.cc -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -o $EXCERCISE_NAME
  artifacts:
    paths:
      - $EXCERCISE_NAME/$EXCERCISE_NAME
    expire_in: 2d

## Templates for different test types
.testFunctionality_template: &testFunctionality_definition
  <<: *general_definition
  stage: testFunctionality
  before_script:
    - echo testread \"$TEST_NAME-in.txt\" \"$TEST_NAME-out.txt\" > $EXCERCISE_NAME/testin.txt
  script: 
    - cd $EXCERCISE_NAME
    - echo Running functionality test for $EXCERCISE_NAME with input file ${TEST_NAME}-in.txt.
    - ./$EXCERCISE_NAME testin.txt

.testFunctionalityDebug_template: &testFunctionalityDebug_definition
  <<: *general_definition
  stage: testFunctionality
  before_script:
    - echo testread \"$TEST_NAME-in.txt\" \"$TEST_NAME-out.txt\" > $EXCERCISE_NAME/testin.txt
  script: 
    - cd $EXCERCISE_NAME
    - echo Running functionality test for $EXCERCISE_NAME with input file ${TEST_NAME}-in.txt with debuggin on.
    - ./$EXCERCISE_NAME testin.txt

.testPerformance_template: &testPerformance_definition
  <<: *general_definition
  stage: testPerformance
  script: 
    - cd $EXCERCISE_NAME
    - echo Running performance test for $EXCERCISE_NAME with input file ${TEST_NAME}_in.txt
    - ./$EXCERCISE_NAME "${TEST_NAME}_in.txt"

.valgind_template: &valgind_definition
  <<: *general_definition
  image: pervasivetut/gcc_valgrind
  stage: valgrind
  script:
    - cd $EXCERCISE_NAME
    - echo Running performance test for $EXCERCISE_NAME with input file ${TEST_NAME}_in.txt
    - valgrind --leak-check=full ./$EXCERCISE_NAME "${TEST_NAME}_in.txt"

# The variables need to be defined with separate anchors, since
# the appending does not work
# https://gitlab.com/gitlab-org/gitlab-ce/issues/24152

# Templates for different assignments. 

.prg2_template: &prg2_definition
  variables: &prg2_variables
    EXCERCISE_NAME: "prg2"

.prg3_template: &prg3_definition
  variables: &prg3_variables
    EXCERCISE_NAME: "prg3"

# Dependency templates
.prg2Depencencies_template: &prg2Depencencies
   dependencies:
     - PRG2:build

.prg3Depencencies_template: &prg3Depencencies
   dependencies:
     - PRG3:build

.prg2DebugDepencencies_template: &prg2DebugDepencencies
   dependencies:
     - PRG2:build:debug

.prg3DebugDepencencies_template: &prg3DebugDepencencies
   dependencies:
     - PRG3:build:debug

# ----------END TEMPLATES----------
# ----------BEGIN JOBS ------------
# Build jobs
PRG3:build:
  <<: *build_definition
  <<: *prg3_definition

PRG3:build:debug:
  <<: *build_debug_definition
  <<: *prg3_definition
# Functionality test jobs

# Tests for PRG3

PRG3:Small:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-compulsory"
  <<: *prg3Depencencies

PRG3:Small:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-least_towns_route"
  <<: *prg3Depencencies

PRG3:Small:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-road_cycle_route"
  <<: *prg3Depencencies

PRG3:Small:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-shortest_route"
  <<: *prg3Depencencies

PRG3:Small:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-trim_road_network"
  <<: *prg3Depencencies

PRG3:Example:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-compulsory"
  <<: *prg3Depencencies

PRG3:Example:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-least_towns_route"
  <<: *prg3Depencencies

PRG3:Example:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-road_cycle_route"
  <<: *prg3Depencencies

PRG3:Example:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-shortest_route"
  <<: *prg3Depencencies

PRG3:Example:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-trim_road_network"
  <<: *prg3Depencencies


PRG3:BiggerTest:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-compulsory"
  <<: *prg3Depencencies

PRG3:BiggerTest:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-least_towns_route"
  <<: *prg3Depencencies

PRG3:BiggerTest:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-road_cycle_route"
  <<: *prg3Depencencies

PRG3:BiggerTest:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-shortest_route"
  <<: *prg3Depencencies

PRG3:BiggerTest:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-trim_road_network"
  <<: *prg3Depencencies


# Functionality test jobs with debug flags on 

# Tests for PRG3

PRG3:debugSTL:Small:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-compulsory"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Small:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-least_towns_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Small:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-road_cycle_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Small:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-shortest_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Small:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "smalltest-trim_road_network"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Example:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-compulsory"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Example:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-least_towns_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Example:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-road_cycle_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Example:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-shortest_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:Example:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "example-trim_road_network"
  <<: *prg3DebugDepencencies


PRG3:debugSTL:BiggerTest:Compulsory:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-compulsory"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:BiggerTest:LeastTownsRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-least_towns_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:BiggerTest:RoadCycleRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-road_cycle_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:BiggerTest:ShortestRoute:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-shortest_route"
  <<: *prg3DebugDepencencies

PRG3:debugSTL:BiggerTest:TrimRoadNetwork:
  <<: *testFunctionality_definition
  variables: 
    <<: *prg3_variables
    TEST_NAME: "biggertest-trim_road_network"
  <<: *prg3DebugDepencencies

#Performance tests

# Tests for PRG3

PRG3:Compulsory:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-compulsory"
  <<: *prg3Depencencies

PRG3:LeastTownsRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-least_towns_route"
  <<: *prg3Depencencies

PRG3:RoadCycleRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-road_cycle_route"
  <<: *prg3Depencencies

PRG3:ShortestRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-shortest_route"
  <<: *prg3Depencencies

PRG3:TrimRoadNetwork:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-trim_road_network"
  <<: *prg3Depencencies

  # Perftests

PRG3:Compulsory:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-compulsory"
  <<: *prg3Depencencies

PRG3:LeastTownsRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-least_towns_route"
  <<: *prg3Depencencies

PRG3:RoadCycleRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-road_cycle_route"
  <<: *prg3Depencencies

PRG3:ShortestRoute:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-shortest_route"
  <<: *prg3Depencencies

PRG3:TrimRoadNetwork:
  <<: *testPerformance_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "perftest-trim_road_network"
  <<: *prg3Depencencies

# Valgrind jobs

PRG3:Valgrind:Example:
  <<: *valgind_definition
  variables:
    <<: *prg3_variables
    TEST_NAME: "all-examples"
  <<: *prg3Depencencies

# ----------END JOBS ---------------
